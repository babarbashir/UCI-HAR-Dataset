1+1
x<-1
x
x<-17
x
y<-10
x+y
title: "Hello_MD"
install packages("slidify")
install.packages("slidify")
install.packages("slidify")
##Heading 2
install.packeage("KernSmooth")
install.packages("KernSmooth")
library("KernSmooth")
cube <-function(x,n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- 1:10
if(x > 5) {
x <- 0
}
x
x<-0
x
x<-1:10
x>5
x>5 : x<0
x>5 : x<-0
if (x>5) x<-0
if (x>5) {x<-0}
y<-6
if(y>5){y<-9}
y
if(y>5){y<-9}
if(y>5){
y<-10
}
data <- read.csv("specdata\001.csv")
data <- read.csv("specdata\\001.csv")
data <- read.csv("specdata/001.csv")
showdir()
getdir()
getdr()
getwd()
data <- read.csv("specdata/001.csv")
data
readFiles<-function(mfiles=1:100){
for(filename in mfiles){
filename
}
}
readFiles(1:10)
readFiles(1:10)
readFiles<-function(mfiles<-1:100){
for(filename in mfiles){
filename
}
}
readFiles<-function(mfiles=1:100){
for(filename in mfiles){
print filename
}
}
getwd()
getwd()
getwd()
getwd()
getwd()
getwd()
x<-list(a=1:5,b=rnorm(1))
x
lapply(x,mean)
x<-list(a=1:5,b=rnorm(10))
x
lapply(x,mean)
q()
getwd()
swirl()
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
5+7
x<- 5+7
x
y<- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
z,555,z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt()
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_
my_div
library(swirl)
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(1, 10, by=0.5)
seq(0,10,0.5)
seq(0,10,by=0.5)
my_seq <- seq(5, 10 , length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with - my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), times =10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf < - num_vect < 1
tf <- c(num_vect < 1)
tf <- c(num_vect < 1)
tf <- num_vect < 1
tf
num_vect >= 6
my_char < c("Mmy", "name", "is")
my_char <- c("Mmy", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Babar Bashir")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
[aste(LETTERS, 1:4, sep="-")
paste(LETTERS, 1:4, sep="-")
exit
quit()
install.packages("swirl")
library(swirl(
library(swirl)
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
old.dir < getwd()
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R"))
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path()
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir21","testdir3"), recursive=TRUE)
dir.create(file.path("testdir2","testdir3"), recursive=TRUE)
unlink("testdir2",recursive=TRUE_
)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive = TRUE)
x<-c(44,NA,5,NA)
x * 3
y<-rnorm(1000)
z <- rep(NA,1000)
mydate <- sample(c(y,,z),100)
mydate <- sample(c(y,z),100)
my_date <- sample(c(y,z),100)
my_data <- sample(c(y,z),100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf - inf
inf-inf
inf/inf
inf-inf
inf from inf
inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) < - c("foo", "bar", "norf")
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
q()
TRUE && 62 < 62 && 44>=44
TRUE && FALSE || 9<=4 && 3<6
FALSE || TRUE && FALSE
99.99 > 100 || 45 < 7.3 || 4!=4.0
99.99 > 100 || 45 < 7.3 || 4 != 4.0
TRUE && FALSE || 9>=4 && 3<6
!(8>4) || 5== 5.0 && 7.8 >=7.79
FALSE && 6>=6 || 7>=8 || 50<=49.5
isTRUE(3)
!isTRUE(4<3)
!isTRUE(8!=5)
xor(identical(xor, 'xor') , 7 == 7.0
)
xor(!isTRUE(TRUE), 6 > -1)
xor( 4>= 9, 8 != 8.0)
Sys.date()
Sys.Ddate()
Sys.Date()
my_vect <- c(2,3,4,1,4)
sum(my_vect)
sum(my_vect) / length(my_vect)
means(my_vect)
mean(my_vect)
my_vect
my_vect(0)
my_vect[0]
my_vect[1]
quit()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)?
)
class(flags)
cls_list <- lapply(flags, class)
cls)list
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flags_colors[,11:17]
flags_colors<- flags[,11:17]
flags_colors <- flags[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shapes_mat)
class(shape_mat)
unique(3,4,5,5,5,6,6)
unique(c(3,4,5,5,5,6,6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
lapply(unique_vals, length)
sapply(unique_vals, length)
unique_vals <- sapply(flags, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
q()
library(swirl)
swirl()
sapply(flags, unique)
vsapply(flags, unique, numeric(1))
vapply(flags, unique, numeric(1))
FUN(X[[1]])
ok()
sapply(flags, class)
vapply(flags, class, charater(1))
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$animate, flags$landmass, summary)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, rows=10)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
smaple(c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))
smaple(c(0,1), 100, replace=TRUE, c(0.3, 0.7))
sample(c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob = 0.7)
flips <- rbinom(c(0,1), 100, prob=0.7)
flips <- rbinom(1, 100, prob=0.7)
flips <- rbinom(100, 1, prob=0.7)
flipss <- rbinom(100, 1, prob=0.7)
flipss <- rbinom(1, 100, prob=0.7)
flips2 <- rbinom(1, 100, prob=0.7)
flips2 <- rbinom(100, 1, prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(1)
rnorm(10)
rnorm(10, mean=100, sd=25)
rnorm(5)
rpois(5)
?rpois
rpois(5, lambda)
rpois(5,10)
replicate(rpois(5,10))
my_pois <- replicate(rpois(5,10))
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
cm
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
unclass(t2)
t2
unclass(t2(
unclass(t2)
str(unclass(t2))
t2$min
weekday(t1)
weekdays(t1)
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units ='days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$spede, y=cars$dist)
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x=Speed, y=cars$dist)
plot(x="Speed", y=cars$dist)
plot(x=cars$dist, y=cars$speed, xlab="Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, main="My Plot")
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars, col=2)
plot(cars(c(10,15)), col=2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2)
data(mtcars)
?boxplot
boxplot(formula=mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
q()
getwd()
source("run_analysis.R")
getwd()
getwd()
source("run_analysis.R")
q()
